apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: pos-txn-monitor
  namespace: pos-txn-monitor-kapp
  annotations:
    kapp.k14s.io/change-rule.serviceaccount: "delete before deleting serviceaccount"
spec:
  serviceAccountName: pos-txn-monitor-installer
  fetch:
    - git:
        url: https://github.com/mwright-pivotal/POSTxnMonitor
        ref: origin/main
        subPath: deploy/app-ytt
  template:
    - ytt:
        inline:
          paths:
            create-namespace-and-sa-secret.yaml: |
              #@ load("@ytt:data", "data")
              ---
              apiVersion: v1
              kind: Namespace
              metadata:
                name: #@ data.values.namespace
              ---
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: default
                namespace: #@ data.values.namespace
              imagePullSecrets:
              - name: pull-secret
              ---
              apiVersion: v1
              kind: Secret
              metadata:
                name: pull-secret
                namespace: #@ data.values.namespace
                annotations:
                  secretgen.carvel.dev/image-pull-secret: ""
              type: kubernetes.io/dockerconfigjson
              data:
                .dockerconfigjson: e30K
            rabbitmq.yaml: |
              #@ load("@ytt:data", "data")
              ---
              apiVersion: rabbitmq.com/v1beta1
              kind: RabbitmqCluster
              metadata:
                name: rabbitmq
                namespace: #@ data.values.namespace
              spec:
                imagePullSecrets:
                - name: tanzu-rabbitmq-registry-creds
                persistence:
                  storage: 10Gi
                rabbitmq:
                  additionalPlugins:
                  - rabbitmq_stream
                replicas: 1
                resources:
                  limits:
                    cpu: "1"
                    memory: 1Gi
                  requests:
                    cpu: "1"
                    memory: 1Gi
                service:
                  type: ClusterIP
            mount-rabbit-secrets.yaml: |
              #@ load("@ytt:overlay", "overlay")
              #@overlay/match by=overlay.subset({"kind": "Deployment", "metadata": {"name": "pos-txn-monitor-dotnet"}}), expects=1
              ---
              spec:
                template:
                  spec:
                    containers:
                    #@overlay/match by="name"
                    - name: pos-txn-monitor-dotnet
                      #@overlay/match missing_ok=True
                      envFrom:
                      - secretRef:
                          name: rabbitmq-default-user
                        prefix: RABBIT_  
        paths:
        - pos-txn-monitor.yaml
        valuesFrom:
          - secretRef:
              name: store1-values
  deploy:
    - kapp: {}