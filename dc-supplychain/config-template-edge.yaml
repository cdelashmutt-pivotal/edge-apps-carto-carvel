apiVersion: carto.run/v1alpha1
kind: ClusterConfigTemplate
metadata:
  name: config-template-edge
spec:
  configPath: .data
  healthRule:
    alwaysHealthy: {}
  ytt: |
    #@ load("@ytt:data", "data")
    #@ load("@ytt:yaml", "yaml")

    #@ def merge_labels(fixed_values):
    #@   labels = {}
    #@   if hasattr(data.values.workload.metadata, "labels"):
    #@     labels.update(data.values.workload.metadata.labels)
    #@   end
    #@   labels.update(fixed_values)
    #@   return labels
    #@ end

    #@ def delivery():
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: #@ data.values.workload.metadata.name
    spec:
      selector:
        matchLabels: 
          app: #@ data.values.workload.metadata.name
      template:
        metadata:
          labels:
            app: #@ data.values.workload.metadata.name
        spec:
          containers:
          - name: pos-txn-monitor-dotnet
            image: #@ data.values.image
            ports:
            - name: http
              containerPort: 8080
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: #@ data.values.workload.metadata.name
      labels:
        app: #@ data.values.workload.metadata.name
    spec:
      ports:
      - port: 80
        targetPort: http
      selector:
        app: #@ data.values.workload.metadata.name
    #@ end

    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: #@ data.values.workload.metadata.name
      labels: #@ merge_labels({ "app.kubernetes.io/component": "config" })
    data:
      delivery.yml: #@ yaml.encode(delivery())
