apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: image-writer-lock
spec:
  description: |-
    a task that writes a given set of files (provided as a json base64-encoded)
    to a container image registry as an image making use of the imgpkg bundle
    format, and locks the image references in the bundle.
  params:
  - description: name of the registry + repository to push the bundle to
    name: bundle
    type: string
  - description: |
      base64-encoded json map of files to write to registry, for example - eyAiUkVBRE1FLm1kIjogIiMgUmVhZG1lIiB9
    name: files
    type: string
  - default: ""
    description: |
      PEM encoded certificate data for the image registry where the files will be pushed to.
    name: ca_cert_data
    type: string
  steps:
  - env:
    - name: DOCKER_CONFIG
      value: /tekton/home/.docker/
    - name: HOME
      value: /tekton/home/
    image: harbor.eqix.vmwedge.com/tekton-task-images/imgpkg-kbld:latest
    name: main
    resources: {}
    script: |-
      #!/usr/bin/env bash

      set -o errexit
      set -o pipefail
      set -o xtrace

      cd `mktemp -d`

      echo -e "$(params.files)" | base64 --decode > files.json
      eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value) > \(.key)"')"

      mkdir -p .imgpkg

      kbld -f . --imgpkg-lock-output .imgpkg/images.yml

      imgpkg_params=""
      if [[ ! -z "$(params.ca_cert_data)" ]]; then
        certs_dir=$(mktemp -d)
        echo "$(params.ca_cert_data)" > $certs_dir/cert
        imgpkg_params="--registry-ca-cert-path=$certs_dir/cert"
      fi

      export IMGPKG_ENABLE_IAAS_AUTH=false
      imgpkg push $imgpkg_params --registry-verify-certs=false -b $(params.bundle) -f .
