apiVersion: carto.run/v1alpha1
kind: ClusterRunTemplate
metadata:
  name: config-writer-template-lock
spec:
  outputs:
    bundle: .status.taskResults[?(@.name == 'bundle')].value
  template:
    apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: $(runnable.metadata.name)$-
      labels: $(runnable.metadata.labels)$
    spec:
      taskSpec:
        results:
        - name: bundle
        description: |-
          a task that writes a given set of files (provided as a json base64-encoded)
          to a container image registry as an image making use of the imgpkg bundle
          format, and locks the image references in the bundle.
        steps:
        - env:
          - name: DOCKER_CONFIG
            value: /tekton/home/.docker/
          - name: HOME
            value: /tekton/home/
          image: harbor.workshop.amer.end2end.link/chris-test/imgpkg:latest
          name: main
          resources: {}
          script: |-
            #!/usr/bin/env bash
            set -o errexit
            set -o pipefail
            set -o xtrace

            files="$(runnable.spec.inputs.files)$"
            ca_cert_data="$(runnable.spec.inputs.ca_cert_data)$"
            bundle="$(runnable.spec.inputs.bundle)$"

            cd `mktemp -d`

            echo -e "${files}" | base64 --decode > files.json
            eval "$(cat files.json | jq -r 'to_entries | .[] | @sh "mkdir -p $(dirname \(.key)) && echo \(.value) > \(.key)"')"

            mkdir -p .imgpkg

            kbld -f . --imgpkg-lock-output .imgpkg/images.yml

            imgpkg_params=""
            if [[ ! -z "${ca_cert_data}" ]]; then
              certs_dir=$(mktemp -d)
              echo "${ca_cert_data}" > $certs_dir/cert
              imgpkg_params="--registry-ca-cert-path=$certs_dir/cert"
            fi

            export IMGPKG_ENABLE_IAAS_AUTH=false
            imgpkg push $imgpkg_params --registry-verify-certs=false -b ${bundle} -f . --lock-output lock.yaml
            echo -n "$(grep 'image:' lock.yaml | awk '{ print $2 }')" > $(results.bundle.path)
